// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–π Telegram WebApp
class TelegramVersionManager {
    constructor() {
        this.currentVersion = null;
        this.features = {};
        this.init();
    }

    init() {
        if (window.Telegram?.WebApp) {
            this.currentVersion = parseFloat(window.Telegram.WebApp.version || '6.0');
            this.features = this.checkFeatures();
            this.showCompatibilityInfo();
        }
    }

    checkFeatures() {
        const tg = window.Telegram?.WebApp;
        if (!tg) return {};

        const version = this.currentVersion;
        
        return {
            // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            backButton: version >= 6.1,
            hapticFeedback: version >= 6.1,
            setHeaderColor: version >= 6.1,
            cloudStorage: version >= 6.9,
            biometric: version >= 7.2,
            
            // –°—Ç–∞—Ç—É—Å –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            isFullySupported: version >= 6.1,
            isLimited: version === 6.0,
            needsUpdate: version < 6.0
        };
    }

    showCompatibilityInfo() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
        if (this.features.needsUpdate) {
            this.showUpdateNotice();
        } else if (this.features.isLimited) {
            this.showLimitedNotice();
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        console.log('üîß Telegram WebApp Compatibility Report:');
        console.log(`üì± Version: ${this.currentVersion}`);
        console.log('‚úÖ Supported features:', Object.entries(this.features)
            .filter(([key, value]) => value === true && !key.startsWith('is') && !key.startsWith('needs'))
            .map(([key]) => key));
        console.log('‚ùå Unsupported features:', Object.entries(this.features)
            .filter(([key, value]) => value === false && !key.startsWith('is') && !key.startsWith('needs'))
            .map(([key]) => key));
    }

    showUpdateNotice() {
        const notice = this.createNotice(
            '‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è Telegram',
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ Telegram –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            'warning',
            8000
        );
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const updateBtn = document.createElement('button');
        updateBtn.textContent = '–ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å?';
        updateBtn.style.cssText = `
            margin-top: 10px;
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            color: white;
            font-size: 12px;
            cursor: pointer;
        `;
        updateBtn.onclick = () => this.showUpdateInstructions();
        
        notice.appendChild(updateBtn);
    }

    showLimitedNotice() {
        this.createNotice(
            'üí° –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
            '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ Telegram 6.0. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ –≤–µ—Ä—Å–∏–∏ 6.1+ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞',
            'info',
            5000
        );
    }

    createNotice(title, message, type = 'info', duration = 4000) {
        const notice = document.createElement('div');
        notice.className = `telegram-version-notice telegram-version-notice-${type}`;
        
        const colors = {
            warning: 'linear-gradient(135deg, #f59e0b, #d97706)',
            info: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
            success: 'linear-gradient(135deg, #10b981, #059669)'
        };

        notice.style.cssText = `
            position: fixed;
            top: 20px;
            left: 20px;
            right: 20px;
            z-index: 9999;
            background: ${colors[type] || colors.info};
            border-radius: 12px;
            padding: 16px 20px;
            color: white;
            font-size: 13px;
            line-height: 1.4;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            transform: translateY(-100px);
            opacity: 0;
            transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
            max-width: 400px;
            margin: 0 auto;
        `;

        const titleEl = document.createElement('div');
        titleEl.style.cssText = 'font-weight: 600; margin-bottom: 4px; font-size: 14px;';
        titleEl.textContent = title;

        const messageEl = document.createElement('div');
        messageEl.style.cssText = 'opacity: 0.9;';
        messageEl.textContent = message;

        notice.appendChild(titleEl);
        notice.appendChild(messageEl);

        document.body.appendChild(notice);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notice.style.transform = 'translateY(0)';
            notice.style.opacity = '1';
        }, 100);

        // –ê–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notice.style.transform = 'translateY(-100px)';
            notice.style.opacity = '0';
            setTimeout(() => {
                if (document.body.contains(notice)) {
                    document.body.removeChild(notice);
                }
            }, 500);
        }, duration);

        return notice;
    }

    showUpdateInstructions() {
        const modal = document.createElement('div');
        modal.className = 'update-instructions-modal';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 10000;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            backdrop-filter: blur(10px);
        `;

        const content = document.createElement('div');
        content.style.cssText = `
            background: #1a1a1a;
            border-radius: 16px;
            padding: 24px;
            max-width: 400px;
            width: 100%;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.1);
        `;

        content.innerHTML = `
            <div style="text-align: center;">
                <h3 style="margin-bottom: 16px; color: #f59e0b;">üîÑ –ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å Telegram</h3>
                <div style="text-align: left; margin-bottom: 20px; line-height: 1.6;">
                    <p style="margin-bottom: 12px;"><strong>üì± –ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ:</strong></p>
                    <p style="margin-bottom: 8px; color: #cccccc;">1. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</p>
                    <p style="margin-bottom: 8px; color: #cccccc;">2. –ù–∞–π–¥–∏—Ç–µ "Telegram"</p>
                    <p style="margin-bottom: 8px; color: #cccccc;">3. –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å"</p>
                    <p style="margin-bottom: 16px; color: #cccccc;">4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
                    
                    <p style="margin-bottom: 8px;"><strong>üíª –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:</strong></p>
                    <p style="margin-bottom: 8px; color: #cccccc;">1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram Desktop</p>
                    <p style="margin-bottom: 8px; color: #cccccc;">2. –ú–µ–Ω—é ‚Üí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</p>
                    <p style="color: #cccccc;">3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</p>
                </div>
                <button onclick="this.closest('.update-instructions-modal').remove()" 
                        style="
                            width: 100%;
                            padding: 12px;
                            background: linear-gradient(135deg, #f59e0b, #d97706);
                            border: none;
                            border-radius: 10px;
                            color: white;
                            font-weight: 600;
                            cursor: pointer;
                            font-size: 14px;
                        ">
                    –ü–æ–Ω—è—Ç–Ω–æ
                </button>
            </div>
        `;

        modal.appendChild(content);
        document.body.appendChild(modal);

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ overlay
        modal.onclick = (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        };
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    isFeatureSupported(featureName) {
        return this.features[featureName] || false;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º
    getFeatureRecommendations() {
        if (this.features.needsUpdate) {
            return {
                recommendation: 'critical_update',
                message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram'
            };
        } else if (this.features.isLimited) {
            return {
                recommendation: 'optional_update',
                message: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞'
            };
        } else {
            return {
                recommendation: 'fully_supported',
                message: '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è'
            };
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≤–µ—Ä—Å–∏–π
const telegramVersionManager = new TelegramVersionManager();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.telegramVersionManager = telegramVersionManager;

// –•–µ–ª–ø–µ—Ä —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
window.isTelegramFeatureSupported = (featureName) => {
    return telegramVersionManager.isFeatureSupported(featureName);
};